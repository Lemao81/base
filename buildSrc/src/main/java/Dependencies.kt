object Versions {
    // plugins
    const val customPlugins = "1.0.5"
    const val gmsPlugin = "4.1.0"
    const val androidGradlePlugin = "3.4.2"
    const val fabricPlugin = "1.24.4"
    const val hugoPlugin = "1.2.1"

    // utils
    const val andutils = "1.0.105"
    const val andtestutils = "1.0.10"
    const val jutils = "1.0.26"
    const val jtestutils = "1.0.0"
    const val firebaseutils = "1.0.7"
    const val resutils = "1.0.7"
    const val customviewutils = "1.0.8"
    const val rxutils = "1.0.0"

    // custom views
    const val rangebar = "1.0.3"
    const val stackoverflowtag = "1.0.5"
    const val availableindicator = "1.0.0"
    const val rippleEffect = "1.0.0"

    // libs
    const val java7 = "1.7"
    const val java8 = "1.8"
    const val kotlin = "1.3.21"
    const val androidxCore = "1.0.0"
    const val androidxCoreKtx = "1.0.1"
    const val androidxAppcompat = "1.0.0"
    const val androidxAnnotation = "1.0.0"
    const val androidxConstraintLayout = "1.1.2"
    const val androidxGridLayout = "1.0.0"
    const val androidxLegacyV4 = "1.0.0"
    const val androidxRecyclerView = "1.0.0"
    const val androidxCardView = "1.0.0"
    const val androidxExifInterface = "1.0.0"
    const val androidxPreference = "1.0.0"
    const val androidxLifecycleExtensions = "2.0.0-rc01"
    const val androidxLifecycleLiveData = "2.0.0-rc01"
    const val androidxLifecycleLiveDataCore = "2.0.0-rc01"
    const val androidxLifecycleRuntime = "2.0.0-rc01"
    const val androidxLifecycleViewModel = "2.0.0-rc01"
    const val androidxRoomRuntime = "2.0.0-rc01"
    const val androidxRoomCompiler = "2.0.0-rc01"
    const val androidxTestRunner = "1.1.0"
    const val androidxTestRules = "1.1.0"
    const val androidxTestMonitor = "1.1.0"
    const val androidxTestUiAutomator = "2.2.0"
    const val androidxTestEspressoCore = "3.1.0"
    const val androidxTestEspressoIntents = "3.1.0"
    const val androidxTestExtJunit = "1.0.0"
    const val material = "1.0.0-rc01"
    const val kotlinCoroutine = "1.0.0"
    const val anko = "0.10.6"
    const val gmsBase = "16.0.1"
    const val gmsLocation = "16.0.0"
    const val firebaseCore = "16.0.4"
    const val firebaseCommon = "16.0.4"
    const val firebaseDatabase = "16.0.3"
    const val firebaseAuth = "16.0.4"
    const val firebaseCrash = "16.2.1"
    const val firebaseStorage = "16.0.3"
    const val firebaseUi = "4.2.1"
    const val support = "28.0.0"
    const val glide = "4.8.0"
    const val rxJava = "2.1.9"
    const val rxJavaAndroid = "2.0.1"
    const val rxBinding = "2.1.0"
    const val mapStruct = "1.2.0.Final"
    const val constraintLayout = "1.1.3"
    const val mosbyMvi = "3.1.0"
    const val dagger = "2.15"
    const val joda = "2.10.1"
    const val crystalRange = "1.1.3"
    const val imageCropper = "2.5.1"
    const val imageCompressor = "2.1.0"
    const val circleIndicator = "1.2.2@aar"
    const val circleImageView = "2.2.0"
    const val keyboardVisibility = "2.1.0"
    const val jUnit = "4.12"
    const val supportTest = "1.0.1"
    const val espresso = "3.0.2"
    const val crashLytics = "2.7.1@aar"
    const val apacheValidator = "1.6"
    const val javaxInject = "1"
    const val koin = "1.0.1"
    const val room = "1.0.0"
    const val mockito = "2.22.0"
    const val mockitoKotlin = "1.5.0"
    const val powermock = "1.6.5"
    const val mockk = "1.8.12.kotlin13"
    const val frodo = "0.8.3"
    const val retrofit2 = "2.5.0"
    const val retrofit2CoroutineAdapter = "1.0.0"
    const val buildTimeTracker = "0.11.0"
    const val archLifecycle = "1.1.1"
    const val okLog = "2.3.0"
    const val archNavigation = "1.0.0-alpha07"
    const val leakCanary = "1.6.2"
    const val rxDisposer = "1.0.0-alpha.1"
    const val transitionX = "1.0.0-beta4"
    const val khttp = "0.1.0"
    const val kakao = "1.4.0"
    const val uiAutomator = "2.1.1"
    const val multidex = "1.0.3"
    const val permissions = "3.7"
    const val ktlint = "0.29.0"
    const val androidxTestCore = "1.0.0"
    const val autoDsl = "0.0.9"
    const val log4k = "1.0.1"
    const val assertJ = "3.11.1"
    const val okhttp = "3.12.1"
    const val blurry = "3.0.0"
}

object Libs {
    // selfmade
    const val andutils = "com.jueggs:andutils:${Versions.andutils}"
    const val andtestutils = "com.jueggs:andtestutils:${Versions.andtestutils}"
    const val jutils = "com.jueggs:jutils:${Versions.jutils}"
    const val jtestutils = "com.jueggs:jtestutils:${Versions.jtestutils}"
    const val firebaseutils = "com.jueggs:firebaseutils:${Versions.firebaseutils}"
    const val resutils = "com.jueggs:resutils:${Versions.resutils}"
    const val customviewutils = "com.jueggs:customviewutils:${Versions.customviewutils}"
    const val rxutils = "com.jueggs:rxutils:${Versions.rxutils}"
    const val rangebar = "com.jueggs.customview:rangebar:${Versions.rangebar}"
    const val stackoverflowtag = "com.jueggs.customview:stackoverflowtag:${Versions.stackoverflowtag}"
    const val availableindicator = "com.jueggs.customview:availableindicator:${Versions.availableindicator}"
    const val rippleEffect = "com.jueggs.customview:rippleeffect:${Versions.rippleEffect}"

    // libs
    const val kotlinStd7 = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${Versions.kotlin}"
    const val kotlinStd8 = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${Versions.kotlin}"
    const val kotlinReflect = "org.jetbrains.kotlin:kotlin-reflect:${Versions.kotlin}"
    const val kotlinCoroutine = "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.kotlinCoroutine}"
    const val kotlinCoroutineAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.kotlinCoroutine}"
    const val androidxCore = "androidx.core:core:${Versions.androidxCore}"
    const val androidxCoreKtx = "androidx.core:core-ktx:${Versions.androidxCoreKtx}"
    const val androidxAppcompat = "androidx.appcompat:appcompat:${Versions.androidxAppcompat}"
    const val androidxAnnotation = "androidx.annotation:annotation:${Versions.androidxAnnotation}"
    const val androidxConstraintLayout = "androidx.constraintlayout:constraintlayout:${Versions.androidxConstraintLayout}"
    const val androidxGridLayout = "androidx.gridlayout:gridlayout:${Versions.androidxGridLayout}"
    const val androidxLegacyV4 = "androidx.legacy:legacy-support-v4:${Versions.androidxLegacyV4}"
    const val androidxRecyclerView = "androidx.recyclerview:recyclerview:${Versions.androidxRecyclerView}"
    const val androidxCardView = "androidx.cardview:cardview:${Versions.androidxCardView}"
    const val androidxExifInterface = "androidx.exifinterface:exifinterface:${Versions.androidxExifInterface}"
    const val androidxPreference = "androidx.preference:preference:${Versions.androidxPreference}"
    const val androidxLifecycleExtensions = "androidx.lifecycle:lifecycle-extensions:${Versions.androidxLifecycleExtensions}"
    const val androidxLifecycleLiveData = "androidx.lifecycle:lifecycle-livedata:${Versions.androidxLifecycleLiveData}"
    const val androidxLifecycleLiveDataCore = "androidx.lifecycle:lifecycle-livedata-core:${Versions.androidxLifecycleLiveDataCore}"
    const val androidxLifecycleRuntime = "androidx.lifecycle:lifecycle-runtime:${Versions.androidxLifecycleRuntime}"
    const val androidxLifecycleViewModel = "androidx.lifecycle:lifecycle-viewmodel:${Versions.androidxLifecycleViewModel}"
    const val androidxRoomRuntime = "androidx.room:room-runtime:${Versions.androidxRoomRuntime}"
    const val androidxRoomCompiler = "androidx.room:room-compiler:${Versions.androidxRoomCompiler}"
    const val androidxTestRunner = "androidx.test:runner:${Versions.androidxTestRunner}"
    const val androidxTestRules = "androidx.test:rules:${Versions.androidxTestRules}"
    const val androidxTestMonitor = "androidx.test:monitor:${Versions.androidxTestMonitor}"
    const val androidxTestUiAutomator = "androidx.test.uiautomator:uiautomator:${Versions.androidxTestUiAutomator}"
    const val androidxTestEspressoCore = "androidx.test.espresso:espresso-core:${Versions.androidxTestEspressoCore}"
    const val androidxTestEspressoIntents = "androidx.test.espresso:espresso-intents:${Versions.androidxTestEspressoIntents}"
    const val androidxTestExtJunit = "androidx.test.ext:junit:${Versions.androidxTestExtJunit}"
    const val material = "com.google.android.material:material:${Versions.material}"
    const val supportV4 = "com.android.support:support-v4:${Versions.support}"
    const val supportAppcompat = "com.android.support:appcompat-v7:${Versions.support}"
    const val supportPreferenceV7 = "com.android.support:preference-v7:${Versions.support}"
    const val supportDesign = "com.android.support:design:${Versions.support}"
    const val supportRecyclerView = "com.android.support:recyclerview-v7:${Versions.support}"
    const val supportCardView = "com.android.support:cardview-v7:${Versions.support}"
    const val supportAnnotations = "com.android.support:support-annotations:${Versions.support}"
    const val supportExifinterface = "com.android.support:exifinterface:${Versions.support}"
    const val supportGridLayout = "com.android.support:gridlayout-v7:${Versions.support}"
    const val supportPalette = "com.android.support:palette-v7:${Versions.support}"
    const val supportMultidex = "com.android.support:multidex:${Versions.multidex}"
    const val supportConstraintLayout = "com.android.support.constraint:constraint-layout:${Versions.constraintLayout}"
    const val rxJava = "io.reactivex.rxjava2:rxjava:${Versions.rxJava}"
    const val rxJavaAndroid = "io.reactivex.rxjava2:rxandroid:${Versions.rxJavaAndroid}"
    const val rxBinding = "com.jakewharton.rxbinding2:rxbinding-kotlin:${Versions.rxBinding}"
    const val rxBindingRecyclerView = "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7-kotlin:${Versions.rxBinding}"
    const val rxDisposer = "io.sellmair:disposer:${Versions.rxDisposer}"
    const val databindingBase = "com.android.databinding:baseLibrary:${Versions.androidGradlePlugin}"
    const val databindingCompiler = "com.android.databinding:compiler:${Versions.androidGradlePlugin}"
    const val firebaseCore = "com.google.firebase:firebase-core:${Versions.firebaseCore}"
    const val firebaseCommon = "com.google.firebase:firebase-common:${Versions.firebaseCommon}"
    const val firebaseDatabase = "com.google.firebase:firebase-database:${Versions.firebaseDatabase}"
    const val firebaseAuth = "com.google.firebase:firebase-auth:${Versions.firebaseAuth}"
    const val firebaseCrash = "com.google.firebase:firebase-crash:${Versions.firebaseCrash}"
    const val firebaseStorage = "com.google.firebase:firebase-storage:${Versions.firebaseStorage}"
    const val firebaseUiDatabase = "com.firebaseui:firebase-ui-database:${Versions.firebaseUi}"
    const val firebaseUiAuth = "com.firebaseui:firebase-ui-auth:${Versions.firebaseUi}"
    const val gmsBase = "com.google.android.gms:play-services-base:${Versions.gmsBase}"
    const val gmsLocation = "com.google.android.gms:play-services-location:${Versions.gmsLocation}"
    const val mosbyMvi = "com.hannesdorfmann.mosby3:mvi:${Versions.mosbyMvi}"
    const val anko = "org.jetbrains.anko:anko:${Versions.anko}"
    const val ankoDesign = "org.jetbrains.anko:anko-design:${Versions.anko}"
    const val ankoCommons = "org.jetbrains.anko:anko-commons:${Versions.anko}"
    const val dagger = "com.google.dagger:dagger-android:${Versions.dagger}"
    const val daggerSupport = "com.google.dagger:dagger-android-support:${Versions.dagger}"
    const val daggerProcessor = "com.google.dagger:dagger-android-processor:${Versions.dagger}"
    const val daggerCompiler = "com.google.dagger:dagger-compiler:${Versions.dagger}"
    const val joda = "joda-time:joda-time:${Versions.joda}"
    const val glide = "com.github.bumptech.glide:glide:${Versions.glide}"
    const val glideCompiler = "com.github.bumptech.glide:compiler:${Versions.glide}"
    const val crystalRange = "com.crystal:crystalrangeseekbar:${Versions.crystalRange}"
    const val imageCropper = "com.theartofdev.edmodo:android-image-cropper:${Versions.imageCropper}"
    const val imageCompressor = "id.zelory:compressor:${Versions.imageCompressor}"
    const val circleIndicator = "me.relex:circleindicator:${Versions.circleIndicator}"
    const val circleImageView = "de.hdodenhof:circleimageview:${Versions.circleImageView}"
    const val keyboardVisibility = "net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:${Versions.keyboardVisibility}"
    const val mapStruct = "org.mapstruct:mapstruct-jdk8:${Versions.mapStruct}"
    const val mapStructProcessor = "org.mapstruct:mapstruct-processor:${Versions.mapStruct}"
    const val crashLytics = "com.crashlytics.sdk.android:crashlytics:${Versions.crashLytics}"
    const val apacheValidator = "commons-validator:commons-validator:${Versions.apacheValidator}"
    const val javaxInject = "javax.inject:javax.inject:${Versions.javaxInject}"
    const val koinAndroid = "org.koin:koin-android:${Versions.koin}"
    const val koinAndroidViewModel = "org.koin:koin-android-viewmodel:${Versions.koin}"
    const val koinScope = "org.koin:koin-android-scope:${Versions.koin}"
    const val koinTest = "org.koin:koin-test:${Versions.koin}"
    const val roomRuntime = "android.arch.persistence.room:runtime:${Versions.room}"
    const val roomCompiler = "android.arch.persistence.room:compiler:${Versions.room}"
    const val roomRxJava = "android.arch.persistence.room:rxjava2:${Versions.room}"
    const val archLifecycleExtensions = "android.arch.lifecycle:extensions:${Versions.archLifecycle}"
    const val archLifecycleCompiler = "android.arch.lifecycle:compiler:${Versions.archLifecycle}"
    const val archLifecycleRuntime = "android.arch.lifecycle:runtime:${Versions.archLifecycle}"
    const val archLifecycleViewModel = "android.arch.lifecycle:viewmodel:${Versions.archLifecycle}"
    const val archLifeCycleLiveData = "android.arch.lifecycle:livedata:${Versions.archLifecycle}"
    const val archLifeCycleLiveDataCore = "android.arch.lifecycle:livedata-core:${Versions.archLifecycle}"
    const val retrofit2 = "com.squareup.retrofit2:retrofit:${Versions.retrofit2}"
    const val retrofit2GsonConverter = "com.squareup.retrofit2:converter-gson:${Versions.retrofit2}"
    const val retrofit2CoroutineAdapter = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:${Versions.retrofit2CoroutineAdapter}"
    const val okLog = "com.github.simonpercic:oklog3:${Versions.okLog}"
    const val archNavigationFragment = "android.arch.navigation:navigation-fragment-ktx:${Versions.archNavigation}"
    const val archNavigationUi = "android.arch.navigation:navigation-ui-ktx:${Versions.archNavigation}"
    const val archNavigationSafeArgs = "android.arch.navigation:navigation-safe-args-gradle-plugin:${Versions.archNavigation}"
    const val leakCanary = "com.squareup.leakcanary:leakcanary-android:${Versions.leakCanary}"
    const val leakCanaryNoop = "com.squareup.leakcanary:leakcanary-android-no-op:${Versions.leakCanary}"
    const val leakCanarySupport = "com.squareup.leakcanary:leakcanary-support-fragment:${Versions.leakCanary}"
    const val transitionX = "in.arunkumarsampath:transition-x:${Versions.transitionX}"
    const val khttp = "khttp:khttp:${Versions.khttp}"
    const val permissions = "com.nabinbhandari.android:permissions:${Versions.permissions}"
    const val ktlint = "com.github.shyiko:ktlint:${Versions.ktlint}"
    const val autoDsl = "com.juanchosaravia.autodsl:annotation:${Versions.autoDsl}"
    const val autoDslProcessor = "com.juanchosaravia.autodsl:processor:${Versions.autoDsl}"
    const val log4k = "com.log4k:log4k:${Versions.log4k}"
    const val log4kAndroid = "com.log4k:log4k-android:${Versions.log4k}"
    const val okhttp = "com.squareup.okhttp3:okhttp:${Versions.okhttp}"
    const val blurry = "jp.wasabeef:blurry:${Versions.blurry}"

    // testing
    const val jUnit = "junit:junit:${Versions.jUnit}"
    const val testRunner = "com.android.support.test:runner:${Versions.supportTest}"
    const val testRules = "com.android.support.test:rules:${Versions.supportTest}"
    const val espressoCore = "com.android.support.test.espresso:espresso-core:${Versions.espresso}"
    const val espressoIntents = "com.android.support.test.espresso:espresso-intents:${Versions.espresso}"
    const val uiAutomator = "com.android.support.test.uiautomator:uiautomator-v18:${Versions.uiAutomator}"
    const val mockito = "org.mockito:mockito-core:${Versions.mockito}"
    const val powermock = "org.powermock:powermock:${Versions.powermock}"
    const val mockitoKotlin = "com.nhaarman:mockito-kotlin:${Versions.mockitoKotlin}"
    const val mockk = "io.mockk:mockk:${Versions.mockk}"
    const val mockkAndroid = "io.mockk:mockk-android:${Versions.mockk}"
    const val kakao = "com.agoda.kakao:kakao:${Versions.kakao}"
    const val androidxTestCore = "androidx.test:core:${Versions.androidxTestCore}"
    const val assertJ = "org.assertj:assertj-core:${Versions.assertJ}"
}

object Plugins {
    const val custom = "com.jueggs:gradleplugins:${Versions.customPlugins}"
    const val androidBuild = "com.android.tools.build:gradle:${Versions.androidGradlePlugin}"
    const val kotlin = "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlin}"
    const val gms = "com.google.gms:google-services:${Versions.gmsPlugin}"
    const val fabric = "io.fabric.tools:gradle:${Versions.fabricPlugin}"
    const val hugo = "com.jakewharton.hugo:hugo-plugin:${Versions.hugoPlugin}"
    const val frodo = "com.fernandocejas.frodo:frodo-plugin:${Versions.frodo}"
    const val buildTimeTracker = "net.rdrei.android.buildtimetracker:gradle-plugin:${Versions.buildTimeTracker}"
    const val safeargs = "android.arch.navigation:navigation-safe-args-gradle-plugin:${Versions.archNavigation}"
}